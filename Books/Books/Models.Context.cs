//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Books
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class booksEntities1 : DbContext
    {
        public booksEntities1()
            : base("name=booksEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<book> books { get; set; }
        public virtual DbSet<issued> issueds { get; set; }
        public virtual DbSet<reader> readers { get; set; }
        public virtual DbSet<TotalPrice> TotalPrices { get; set; }
    
        public virtual int ColCountProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ColCountProc");
        }
    
        public virtual int CountDistinctValues(string table)
        {
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CountDistinctValues", tableParameter);
        }
    
        public virtual int GetCount(ObjectParameter cnt)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCount", cnt);
        }
    
        public virtual ObjectResult<GetRowCount_Result> GetRowCount(ObjectParameter cnt)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRowCount_Result>("GetRowCount", cnt);
        }
    
        public virtual ObjectResult<HAS_MORE_100_Result> HAS_MORE_100()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HAS_MORE_100_Result>("HAS_MORE_100");
        }
    
        public virtual ObjectResult<MaxAmountOfCopies_Result> MaxAmountOfCopies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MaxAmountOfCopies_Result>("MaxAmountOfCopies");
        }
    
        public virtual int RowCountT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RowCountT");
        }
    }
}
